#!/bin/bash

# copying .<filename> to $HOME
[[ "$(uname -s)" != "Darwin" ]] && exit 0

ROOT="$HOME"
DOTFILES_ROOT="$ROOT/.dotfiles"

echo ''

info() {
  printf "  [ \033[00;34m..\033[0m ] %s " "$1"
}
export -f info

user() {
  printf "\r  [ \033[0;33m?\033[0m ] %s " "$1"
}
export -f user

success() {
  printf "\r\033[2K  [ \033[00;32mOK\033[0m ] %s\n" "$1"
  echo ''
}
export -f success

fail() {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] %s\n" "$1"
  echo ''
  exit
}
export -f fail

link_file() {
  local src
  local dst
  local overwrite
  local skip

  src="$1"
  dst="$HOME/.$(basename "${src%.*}")"

  if [ -f "$dst" ] || [ -d "$dst" ] || [ -L "$dst" ]; then
    user "File already exists: $dst ($(basename "$src")), [s]kip, [o]verwrite? "
    read -r -n 1 action

    case "$action" in
      "o")
        overwrite="o"
        ;;
      *)
        skip="s"
    esac

    if [ "$overwrite" == "o" ]; then
      rm -rf "$dst"
      success "removed $dst"
    fi

    if [ "$skip" == "s" ]; then
      success "skipped $src"
    fi
  fi

  if [ "$skip" != "s" ]; then
    ln -s "$src" "$dst"
    success "linked $src to $dst"
  fi
}

export -f link_file

search_symlinks() {
  find "$DOTFILES_ROOT" -maxdepth 2 -name \*.symlink \
  -exec bash -c 'link_file "$1"' _ {} \;
}

search_symlinks
