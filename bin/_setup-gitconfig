#!/bin/bash

# setup .gitconfig

DOTFILES_ROOT="$HOME/.dotfiles"

echo ''

info() {
  printf "  [ \033[00;34m..\033[0m ] %s " "$1"
}

user() {
  printf "\r  [ \033[0;33m?\033[0m ] %s " "$1"
}

success() {
  printf "\r\033[2K  [ \033[00;32mOK\033[0m ] %s\n" "$1"
  echo ''
}

fail() {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] %s\n" "$1"
  echo ''
  exit
}

generate_gitconfig() {
  info 'setup gitconfig'

  git_credential='cache'

  if [ "$(uname -s)" == "Darwin" ]; then
    git_credential='osxkeychain'
  fi

  user ' - What is your github author name?'
  read -r -e git_authorname

  user ' - What is your github author email?'
  read -r -e git_authoremail

  sed \
    -e "s/AUTHORNAME/$git_authorname/g" \
    -e "s/AUTHOREMAIL/$git_authoremail/g" \
    -e "s/GIT_CREDENTIAL_HELPER/$git_credential/g" \
    "$DOTFILES_ROOT/symlinks/gitconfig.symlink.example" > "$DOTFILES_ROOT/symlinks/gitconfig.symlink"

  success "$DOTFILES_ROOT/symlinks/gitconfig.symlink created!"
}

setup_gitconfig() {
  local gitconfig="$DOTFILES_ROOT/symlinks/gitconfig.symlink"
  if [ -f "$gitconfig" ]; then
    user "File already exists: $gitconfig, would like to re-generate .gitconfig.symlink? [y/n] "
    read -r -e action

    if [ "$action" = "y" ]; then
      echo ''
      generate_gitconfig
    fi
  else
    generate_gitconfig
  fi
}

setup_gitconfig
